version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: matching-engine-zookeeper
    healthcheck:
      test: echo srvr | nc localhost 2181 || exit 1
      interval: 5s
      timeout: 5s
      retries: 10
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - matching_network

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    container_name: matching-engine-kafka
    depends_on:
      zookeeper:
        condition: service_healthy
    healthcheck:
      test: nc -z localhost 9092 || exit 1
      interval: 5s
      timeout: 5s
      retries: 10
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29092,EXTERNAL://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,EXTERNAL://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 100
    volumes:
      - kafka_data:/var/lib/kafka/data
    networks:
      - matching_network

  matching-engine:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: matching-engine-service
    restart: unless-stopped
    env_file:
      - .env
    depends_on:
      kafka:
        condition: service_healthy
    ports:
      - "8080:8080"
    networks:
      - matching_network

networks:
  matching_network:
    name: matching_network
    driver: bridge

volumes:
  kafka_data:
    name: matching-engine-kafka-data  